import sys
sys.stdout.reconfigure(encoding='utf-8')  # ‚úÖ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–¥–∏—Ä–æ–≤–∫—É UTF-8

import os
import requests
import psycopg2
from flask import Flask, request, jsonify
import openai
 
app = Flask(__name__)

# üîë –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL
DB_USER = "worker1"  # –¢–≤–æ–π username –≤ –ë–î
DB_PASSWORD = "HxwV52HjFiJ6jIE9QsSzB5GSuxDATlwr"  # –í—Å—Ç–∞–≤—å —Å–≤–æ–π –ø–∞—Ä–æ–ª—å
DB_NAME = "mydatabase_o3vx"  # –ò–º—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
DB_HOST = "dpg-cvdtb452ng1s73cajrp0-a.oregon-postgres.render.com"  # –ù–∞–ø—Ä–∏–º–µ—Ä: dpg-xxxxx-a.oregon-postgres.render.com
DB_PORT = 5432  # –ü–æ—Ä—Ç PostgreSQL

# üõ† –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
def get_db_connection():
    return psycopg2.connect(
        dbname=DB_NAME,
        user=DB_USER,
        password=DB_PASSWORD,
        host=DB_HOST,
        port=DB_PORT
    )

# üî• OpenAI API
OPENAI_API_KEY = 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"
ASSISTANT_ID = "asst_4Jfbku9f3nTAJqcsyoCf9MGW"
openai.api_key = OPENAI_API_KEY

# üìå –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å OpenAI
def send_to_openai(user_message, thread_id=None):
    if thread_id:
        response = openai.beta.threads.messages.create(
            thread_id=thread_id,
            role="user",
            content=user_message
        )
    else:
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Ç—Ä–µ–¥
        thread = openai.beta.threads.create()
        thread_id = thread.id
        response = openai.beta.threads.messages.create(
            thread_id=thread_id,
            role="user",
            content=user_message
        )
    return thread_id, response

# üìå API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π
@app.route("/message", methods=["POST"])
def receive_message():
    data = request.json
    telegram_id = data.get("telegram_id")
    user_message = data.get("message")

    if not telegram_id or not user_message:
        return jsonify({"error": "–ù–µ –ø–µ—Ä–µ–¥–∞–Ω—ã –¥–∞–Ω–Ω—ã–µ"}), 400

    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –ë–î
    conn = get_db_connection()
    cursor = conn.cursor()

    # –ò—â–µ–º —Ç—Ä–µ–¥ –≤ –±–∞–∑–µ
    cursor.execute("SELECT thread_id FROM users_threads WHERE telegram_id = %s;", (telegram_id,))
    thread = cursor.fetchone()

    if thread:
        thread_id = thread[0]
    else:
        thread_id, _ = send_to_openai(user_message)
        cursor.execute("INSERT INTO users_threads (telegram_id, thread_id) VALUES (%s, %s);",
                       (telegram_id, thread_id))
        conn.commit()

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ OpenAI
    _, response = send_to_openai(user_message, thread_id)

    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞
    reply = response.content[0].text if response and response.content else "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞"

    # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –ë–î
    cursor.close()
    conn.close()

    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ç–≤–µ—Ç
    return jsonify({"reply": reply})

# üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
if __name__ == "__main__":
    app.run(host="0.0.0.0", port=5000)
